# Test Configuration for Distri A2A Integration
# This file demonstrates the agent setup for testing the A2A protocol implementation

# Store configuration
stores:
  # Use memory stores for this example
  entity: "memory"
  session: "memory"

server:
  host: "127.0.0.1"
  port: 8080
  documentation_url: "https://github.com/distrihub/distri"
  preferred_transport: "JSONRPC"

  # A2A capabilities
  capabilities:
    streaming: true
    push_notifications: true
    state_transition_history: true
    extensions: []

  # Default input/output modes
  default_input_modes:
    - "text/plain"
    - "text/markdown"

  default_output_modes:
    - "text/plain"
    - "text/markdown"

  # Security configuration (optional)
  security_schemes: {}
  security: []

# Agent definitions
agents:
  - name: "assistant"
    description: "A helpful AI assistant that can answer questions and help with tasks"
    model: "gpt-4"
    system_prompt: |
      You are a helpful AI assistant. You can answer questions, help with tasks, 
      and provide information on a wide variety of topics. Be concise but thorough 
      in your responses.
    icon_url: "https://example.com/assistant-icon.png"
    mcp_servers: []

  - name: "researcher"
    description: "A research specialist that provides detailed analysis and information"
    model: "gpt-4"
    system_prompt: |
      You are a research specialist. Your role is to provide detailed, accurate, 
      and well-sourced information on topics. Always cite sources when possible 
      and provide comprehensive analysis.
    icon_url: "https://example.com/researcher-icon.png"
    mcp_servers: []

  - name: "coder"
    description: "A programming assistant that helps with code development and debugging"
    model: "gpt-4"
    system_prompt: |
      You are a programming assistant. Help users with coding tasks, debugging, 
      code review, and software development best practices. Provide clear 
      explanations and working code examples.
    icon_url: "https://example.com/coder-icon.png"
    mcp_servers: []

# MCP server configurations (if any)
mcp_servers: []

# Logging configuration
logging:
  level: "info"
  verbose: true
